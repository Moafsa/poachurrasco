#!/bin/bash

# Script de Deploy Autom√°tico - Sistema de Avalia√ß√µes Integradas
# Este script garante que o sistema funcione perfeitamente em produ√ß√£o

set -e  # Exit on any error

echo "üöÄ Iniciando deploy do Sistema de Avalia√ß√µes Integradas..."

# 1. Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto Laravel"
    exit 1
fi

# 2. Verificar se o Docker est√° rodando
if ! docker-compose ps | grep -q "Up"; then
    echo "‚ùå Erro: Docker Compose n√£o est√° rodando"
    echo "Execute: docker-compose up -d"
    exit 1
fi

# 3. Executar migra√ß√µes
echo "üì¶ Executando migra√ß√µes..."
docker-compose exec app php artisan migrate --force

# 4. Executar seeds (preserva dados existentes)
echo "üå± Executando seeds..."
docker-compose exec app php artisan db:seed --force

# 5. Limpar e reconstruir cache
echo "üßπ Limpando cache..."
docker-compose exec app php artisan cache:clear
docker-compose exec app php artisan config:cache
docker-compose exec app php artisan route:cache
docker-compose exec app php artisan view:cache

# 6. Verificar status das migra√ß√µes
echo "‚úÖ Verificando status das migra√ß√µes..."
docker-compose exec app php artisan migrate:status

# 7. Testar comando de sincroniza√ß√£o
echo "üîÑ Testando sincroniza√ß√£o de avalia√ß√µes..."
docker-compose exec app php artisan reviews:sync-external --limit=1 --force

# 8. Verificar dados
echo "üìä Verificando dados..."
ESTABLISHMENTS=$(docker-compose exec app php artisan tinker --execute="echo App\Models\Establishment::whereNotNull('external_id')->count();" | tr -d '\r\n')
EXTERNAL_REVIEWS=$(docker-compose exec app php artisan tinker --execute="echo App\Models\ExternalReview::count();" | tr -d '\r\n')

echo "üìà Estat√≠sticas:"
echo "   - Estabelecimentos com external_id: $ESTABLISHMENTS"
echo "   - Avalia√ß√µes externas: $EXTERNAL_REVIEWS"

# 9. Verificar rotas
echo "üõ£Ô∏è  Verificando rotas..."
docker-compose exec app php artisan route:list --name=reviews

# 10. Teste final
echo "üß™ Executando teste final..."
if docker-compose exec app php artisan tinker --execute="echo 'Sistema OK';" | grep -q "Sistema OK"; then
    echo "‚úÖ Deploy conclu√≠do com sucesso!"
    echo ""
    echo "üéâ Sistema de Avalia√ß√µes Integradas est√° funcionando perfeitamente!"
    echo ""
    echo "üìã Pr√≥ximos passos:"
    echo "   1. Configure cron job para sincroniza√ß√£o autom√°tica:"
    echo "      0 2 * * * cd $(pwd) && docker-compose exec app php artisan reviews:sync-external >> /var/log/reviews-sync.log 2>&1"
    echo ""
    echo "   2. Monitore logs em: storage/logs/laravel.log"
    echo ""
    echo "   3. Teste a interface em: http://localhost:8000/estabelecimento/1"
    echo ""
    echo "üìö Documenta√ß√£o: DEPLOY_AVALIACOES_INTEGRADAS.md"
else
    echo "‚ùå Erro no teste final"
    exit 1
fi
